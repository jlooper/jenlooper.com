---
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import { Card } from "accessible-astro-components";
import { fetchDevToPosts, formatDate, type DevToPost } from "../../utils/fetchDevToPosts";
import type { MarkdownInstance } from 'astro';

interface Frontmatter {
    title: string;
    description: string;
    publishDate: Date;
    image?: string;
    href?: string;
}

interface UnifiedPost {
    title: string;
    description: string;
    publishDate: Date;
    image?: string;
    url: string;
    source: 'local' | 'devto';
    tags?: string[];
    readingTime?: number;
    reactions?: number;
    comments?: number;
}

const title = "Blog";
const description = "Latest articles from all sources.";
const permalink = `${Astro.site.href}blog`;

// Fetch local markdown posts
let localPosts = Object.values(import.meta.glob<MarkdownInstance<Frontmatter>>('../../data/*.md', { eager: true }));

// Fetch dev.to posts
const devToPosts = await fetchDevToPosts('jenlooper');

// Convert local posts to unified format
const unifiedLocalPosts: UnifiedPost[] = localPosts.map(post => ({
    title: post.frontmatter.title,
    description: post.frontmatter.description,
    publishDate: new Date(post.frontmatter.publishDate),
    image: post.frontmatter.image,
    url: post.frontmatter.href || `/blog/${post.file.split("/").pop().split(".").shift()}`,
    source: 'local' as const
}));

// Convert dev.to posts to unified format
const unifiedDevToPosts: UnifiedPost[] = devToPosts.map(post => ({
    title: post.title,
    description: post.description,
    publishDate: new Date(post.published_at),
    image: post.cover_image,
    url: post.url,
    source: 'devto' as const,
    tags: post.tag_list,
    readingTime: post.reading_time_minutes,
    reactions: post.public_reactions_count,
    comments: post.comments_count
}));

// Combine and sort all posts by date (newest first)
const allPosts = [...unifiedLocalPosts, ...unifiedDevToPosts].sort(
    (a, b) => b.publishDate.getTime() - a.publishDate.getTime()
);

---

<DefaultLayout title={title} description={description} current="blog">
  <div class="my-12">
    <section class="space-content container">
      <h1>Featured Articles</h1>
      <p class="text-2xl">
        Many of my articles are published on <a
          href="https://dev.to/jenlooper"
          target="_blank">Dev.to</a
        >. Other articles that I've written are published on <a
          href="https://community.aws/@jelooper"
          target="_blank">community.aws</a
        >. 
        My scholarly articles and others are found on <a
          href="https://scholar.google.com/citations?hl=en&user=zrYOCYwAAAAJ"
          target="_blank">Google Scholar</a
        >. 
        Dozens of articles from my days as a Developer Advocate at Telerik and Progress are found on <a
          href="https://www.telerik.com/blogs/author/jen-looper"
          target="_blank">Telerik's blog</a
        > and <a href="https://blog.nativescript.org/" target="_blank">the NativeScript blog</a>. 
        The articles listed on this page are my more significant or interesting
        short-form writing. Some of these are from particularly engaging project
        announcements, some are really creative technical articles, some are
        thought pieces. You'll find posts here from
        my positions in Developer Advocacy at Cloudinary, AWS, Microsoft, Progress/Telerik, and writing
        related to my nonprofit, Vue Vixens (later renamed to Front-End Foxes). I hope you enjoy them all. 
      </p>

      <div class="container">
        <ul class="my-3">
          {allPosts.map((post) => (
            <li>
              <Card
                img={post.image}
                url={post.url}
                title={post.title}
                footer={formatDate(post.publishDate.toISOString())}
              >
                <div class="post-content">
                  
                  <p class="text-gray-700">{post.description}</p>
                 
                </div>
              </Card>
            </li>
          ))}
        </ul>
      </div>
    </section>
  </div>
</DefaultLayout>

<style lang="scss" is:global>
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
  
  body .card {
    h3 {
      font-size: 1.2rem;
      padding-bottom: 0.5rem;
      line-height: 1.5rem;
    }
    p {
      padding-bottom: 0.5rem;
    }
    
    img {
      width: 100%;
      height: 200px;
      object-fit: cover;
      object-position: center;
      border-radius: 0.5rem 0.5rem 0 0;
    }

    figure {
      margin: 0;
      padding: 0;
      aspect-ratio: 16/9;
      overflow: hidden;
    }

    .post-content {
      .post-meta {
        font-size: 0.875rem;
        color: #6b7280;
        display: flex;
        align-items: center;
        flex-wrap: wrap;
        gap: 0.5rem;
      }

      .source-badge {
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;

        &.devto {
          background-color: #0a0a0a;
          color: white;
        }

        &.featured {
          background-color: #7c3aed;
          color: white;
        }
      }
    }
  }
</style>
